name: Generate Continuous IdP Login Requests
on:
  workflow_dispatch:
    inputs:
      load-balancer-ip:
        description: (Optional) Specific IP address to route all idp requests through.
        required: false
      num-login-attempts:
        description: The number of login cycles you want each client to perform.
        required: true
        default: 30
      wait-time-seconds:
        description: How long, in seconds, to wait between login attempts.
        required: true
        default: 60

jobs:
  generate-login-requests:
    strategy:
      # When you update max-parallel, you must also add a runner-id entry under
      # "include" below.
      max-parallel: 6
      matrix:
        # In order to run things in parallel, Actions, needs
        # _something_ to be part of a matrix. We'll just use some hard-coded ids.
        # When you add something here, you must also increment the max-parallel setting
        # above.
        include:
          - runner-id: 1
          - runner-id: 2
          - runner-id: 3
          - runner-id: 4
          - runner-id: 5
          - runner-id: 6
    runs-on: ubuntu-latest
    steps:
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: ${{ secrets.TEST_RUNNER_GOOGLE_TOKEN }}

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
        with:
          version: '>= 363.0.0'
      - env:
          load_balancer: ${{ github.event.inputs.load-balancer-ip }}
          num_loops: ${{ github.event.inputs.num-login-attempts }}
          sleep_time: ${{ github.event.inputs.wait-time-seconds }}
          # The idp_env has to be prod here. If we need to make this an eval instance
          # instead, we'll need to update the tests to log in with a service using the
          # eval idp.
          idp_env: prod
        run: |
          ip_addr=$(dig ANY +short @resolver2.opendns.com myip.opendns.com)
          echo "::notice::Test runner ${{ matrix.runner-id }} IP address is ${ip_addr}"
          ./scripts/run-idp-login-request-generator.sh -n ${num_loops} -z ${sleep_time} -ip ${load_balancer}
      - uses: actions/upload-artifact@v2
        with:
          name: Test Runner ${{ matrix.runner-id }} webdriver-report
          path: webdriver-report/index.html
