version: "3"
services:
  # This is the testing image built from the Dockerfile in this repository.
  # This requires a `CREDENTIAL_DIRNAME` environment variable be set when you
  # run the composition, if you run it directly. The value of that variable should
  # be the location on the host's (i.e., your) machine that houses the
  # file name built into the Docker image. If the full path to your credential key is
  # "/etc/secrets/uwit-mci-iam-key.json," then the value here would be "/etc/secrets"
  # This directory will be mounted onto the image, and the image will access the
  # built-in filename. This prevents credentials from hanging out in images when
  # they're not running.
  #
  # You can optionally configure the test configuration by setting a
  # PYTEST_ARGS environment variable. This will override all arguments to python
  # except for the "--report-dir," which is mounted to the host's working directory.
  # For more information on useful arguments, see docs/pytest.md.
  test-runner:
    image: ghcr.io/uwit-iam/idp-web-tests:build
    build:
      dockerfile: Dockerfile
      context: .
      target: test-runner
    environment:
      GOOGLE_APPLICATION_CREDENTIALS: /secrets/${CREDENTIAL_FILE_NAME}
      AWS_DEFAULT_REGION: us-west-2
      TZ: America/Los_Angeles
      PYTEST_ARGS: ${PYTEST_ARGS}
      UPLOAD_FILENAME: ${TEST_ARTIFACT_OBJECT_NAME}
      TARGET_IDP_HOST: ${TARGET_IDP_HOST}
      disable_session_browser: 1
    depends_on:
      - selenium
    volumes:
      - ${CREDENTIAL_MOUNT_POINT}:/secrets:ro
      - ${REPORT_MOUNT_POINT}:/tmp/webdriver-report
    command: pytest ${PYTEST_ARGS} --selenium-server selenium:4444

  selenium:
    image: selenium/standalone-chrome:4
    environment:
      SE_NODE_MAX_SESSIONS: 2  # - Allow up to this many concurrent browser instances
                               # on the selenium node.
      SE_START_XFVB: "false"   # - Prevents some expensive overhead we don't need
    ports:
      - "4444:4444"            # - This is the port where you can access the selenium
                               # dashboard
      - "7900:7900"

    logging:
      driver: 'none'
